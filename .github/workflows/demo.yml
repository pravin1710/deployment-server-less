name: Deploy vpi-proxy-server to ${{ github.event.inputs.envt }} branch

on:
  workflow_dispatch:
    branches:
    - develop
    inputs:
      envt:
        description: 'Select Environment'
        required: true
        options:
          - cert
          - prod
    paths:
      - 'cert/**'
      - 'prod/**'
  pull_request:
    branches: # PRs to the following branches will trigger the workflow
      - develop
    paths:
      - 'cert/**'
      - 'prod/**'

permissions:
  id-token: write
  contents: write

jobs:
  changes:
    name: Detect Changes in folder
    runs-on: ubuntu-latest
    outputs:
      names: ${{ steps.filter.outputs.changes }}
    steps:
    - uses: actions/checkout@v2
    - name: Detect Changes
      uses: dorny/paths-filter@v2
      id: filter
      with:
        filters: |
          cert:
            - 'cert/**'
          prod:
            - 'prod/**'

  deploy:
    needs: changes
    if: ${{ needs.changes.outputs.names != '[]' && github.ref == 'refs/heads/${{ github.event.inputs.envt }}' }}
    name: Deploy ${{ github.event.inputs.envt }} Branch
    runs-on: ubuntu-latest
    strategy:
      matrix:
        node-version: [18.x]
        name: ${{ fromJSON(needs.changes.outputs.names) }}
    defaults:
      run:
        shell: bash
        working-directory: ${{ matrix.name }}
    steps:
    - uses: actions/checkout@v3
    - name: Use Node.js ${{ matrix.node-version }}
      uses: actions/setup-node@v3
      with:
        node-version: ${{ matrix.node-version }}
    - name: Configure AWS Credentials
      uses: aws-actions/configure-aws-credentials@v1
      with:
        aws-region: ap-south-1
        role-to-assume: arn:aws:iam::238573859336:role/OIDC-deployment
        role-session-name: OIDC-deployment
    - name: Convert variable to uppercase
      id: string
      uses: ASzc/change-string-case-action@v5
      with:
       string: ${{ github.event.inputs.envt }}
    - id: step2
      run: echo ${{ steps.string.outputs.uppercase }}     
    - name: Retrieve .env content
      env:
        ENV_CONTENT: ${{ secrets[format('{0}_ENV', steps.string.outputs.uppercase ) }}  
      run: echo "$ENV_CONTENT" > .env
    - run: npm ci
    - name: serverless deploy
      uses: serverless/github-action@v1
      with:
        args: -c "cd ./${{ matrix.name }} && serverless deploy"
        entrypoint: /bin/sh
